################################################################################
# Travis CI configuration
# Docs: https://docs.travis-ci.com/
# About Stages: https://docs.travis-ci.com/user/build-stages/
#
sudo: false
dist: trusty

# https://docs.travis-ci.com/user/installing-dependencies/#Installing-Packages-with-the-APT-Addon
addons:
  apt:
    packages:
      - python-pygments

# https://docs.travis-ci.com/user/notifications/
notifications:
  email: false

# https://docs.travis-ci.com/user/caching/
cache:
  directories:
    - $HOME/build-cache
  timeout: 180
  yarn: true

################################################################################
# Templates
templates:
  - &tmpl-test-deployment
    stage: test deployments
    language: go
    go: 1.9
    script: 'curl https://okramlabs.github.io'

# defaults
before_install: skip
install: skip
before_script: skip
script: skip
after_success: skip
after_failure: skip
after_script: skip

################################################################################
# stages
stages:
  # verify pull request
  - name: verify pull request
    # if: (type = pull_request) AND (branch = master)
    if: (push, pull_request)  AND (branch = master)
  # test source
  - name: test
    if: type IN (push, pull_request)
  # build site
  - name: build
    if: (type = push) AND (branch = master OR tag IS present)
  # deploy okramlabs.github.io
  - name: deploy staging
    if: (repo = okramlabs/aframe) AND (type = push) AND (branch = master) AND (NOT tag IS present)
  # deploy okramlabs.github.io (only on tags on upstream)
  - name: deploy production
    if: (repo = okramlabs/aframe) AND (NOT type = pull_request) AND (tag IS present)

################################################################################
# jobs
jobs:
  include:
    # test theme source
    - stage: verify pull request
      env: HOWIBOT=verify-pull-request
      language: go
      go: 1.9
      script: echo "verify"
    # test theme source
    - stage: test
      env: HOWIBOT=test-theme
      language: node_js
      node_js: node
      script: echo "test"
    # build a fresh theme
    - stage: build
      language: node_js
      node_js: node
      script: echo "build"
    # deploy to deploy okramlabs.github.io master
    - stage: deploy staging
      env: HOWIBOT=deploy-staging
      language: go
      go: 1.9
      script: echo "deploy staging"
      before_deploy: echo "before_deploy okramlabs.github.src"
      deploy:
        skip_cleanup: true
        provider: script
        script: echo "deploy okramlabs.github.io"
        on:
          branch: master
      after_deploy: echo "after_deploy okramlabs.github.src"
    # deploy to deploy okramlabs.github.io master
    - stage: deploy production
      env: HOWIBOT=deploy-production
      language: go
      go: 1.9
      script: echo "deploy production"
      before_deploy: echo "before_deploy production"
      deploy:
        skip_cleanup: true
        provider: script
        script: echo "deploy okramlabs.github.io"
        on:
          branch: master
      after_deploy: echo "create new release production (create new release)"





# # "CI_ACTION=\"npm run test:firefox -- --single-run\"
# # "CI_ACTION=\"npm run test:chrome -- --single-run\"",
# # "CI_ACTION=\"npm run test:node\"",
# # "CI_ACTION=\"npm run lint\"",
# # "CI_ACTION=\"npm run build\"",
# # "CI_ACTION=\"npm run test:docs\"",
# ################################################################################
# # Travis CI configuration
# # Docs: https://docs.travis-ci.com/
# # About Stages: https://docs.travis-ci.com/user/build-stages/
# #
# sudo: false
# dist: trusty
#
# # https://docs.travis-ci.com/user/installing-dependencies/#Installing-Packages-with-the-APT-Addon
# addons:
#   firefox: 'latest'
#   apt:
#     sources:
#       - google-chrome
#     ackages:
#       - google-chrome-stable
#
# # https://docs.travis-ci.com/user/notifications/
# notifications:
#   email: false
#
# # https://docs.travis-ci.com/user/caching/
# cache:
#   directories:
#     - $HOME/build-cache
#   timeout: 180
#   yarn: true
#
# ################################################################################
# # Templates
# templates:
#   - &common_before_install
#     before_install: skip'
#
# ################################################################################
# # stages
# stages:
#   #
#   # ORIG
#   # - name: verify
#   #   if: (type = pull_request) AND (branch = master)
#   - name: verify
#     language: node_js
#     node_js: node
#     if: type IN (push, pull_request) AND (branch = master)
#   # test source
#   - name: test
#     language: node_js
#     node_js:
#       - node
#       - 8
#       - 7
#       - 6
#       - 5
#       - 4
#     if: type IN (push, pull_request)
#   # build
#   - name: build
#     language: node_js
#     node_js:
#       - node
#       - 8
#     if: (type = push) AND (branch = master OR tag IS present)
#   # deploy new release (only on tags on upstream of A-Frame)
#   - name: deploy production
#     language: node_js
#     node_js:
#       - node
#     if: (NOT type = pull_request) AND (tag IS present)
#
# ################################################################################
# # jobs
# jobs:
#   include:
#     # verify pull request
#     - stage: verify
#       script: echo "verify"
#     - stage: test
#       script: echo "test"
#     - stage: build
#       script: echo "build"
#     - stage: deploy production
#       script: echo "prepare deploy"
#       before_deploy: echo "before_deploy aframe.io"
#         deploy:
#           skip_cleanup: true
#           provider: script
#           script: echo "deploy release to github"
#       after_deploy: echo "after_deploy aframe.io"
#
#
# # install:
# #   - npm install
# #   # Firefox.
# #   - ./node_modules/.bin/mozilla-download ./firefox/ --product firefox --branch mozilla-aurora
# #   - export FIREFOX_NIGHTLY_BIN="./firefox/firefox/firefox-bin"
# #   # Chrome.
# #   - export CHROME_BIN=/usr/bin/google-chrome
# #
# # before_script:
# #   - export DISPLAY=:99.0
# #   - sh -e /etc/init.d/xvfb start
# #
# # script:
# #   - $CI_ACTION
# #
# # env:
# #   global:
# #     - TEST_SUITE=unit
# #     - TEST_ENV=ci
# #   matrix:
# #     - CI_ACTION="npm run test:firefox -- --single-run"
# #     - CI_ACTION="npm run test:chrome -- --single-run"
# #     - CI_ACTION="npm run test:node"
# #     - CI_ACTION="npm run lint"
# #     - CI_ACTION="npm run build"
# #     - CI_ACTION="npm run test:docs"
# #
# # branches:
# #   only:
# #     - master
# #
# # after_success:
# #     - npm run codecov
# #
# # cache:
# #   directories:
# #     - node_modules
